name: Build UI Image

on:
  push:
    branches:
      - dev
    paths:
      - "ui/**"
      - ".github/workflows/*-ui.yaml"

env:
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: nithinkuruba

jobs:
  build-ui-on-push:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
    steps:
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.REGISTRY_USERNAME }}/areaservice/areaservice-ui

      - name: Set DEPLOY_ID which will deploy a custom deploy to 'dev' environment
        run: |
          echo '::set-output name=DEPLOY_ID::${{ steps.docker_meta.outputs.version }}'
          echo '::set-output name=APP_VERSION::${{ fromJSON(steps.docker_meta.outputs.json).labels['org.opencontainers.image.version'] }}'
          echo '::set-output name=APP_REVISION::${{ fromJSON(steps.docker_meta.outputs.json).labels['org.opencontainers.image.revision'] }}'
        id: set-deploy-id

      - name: Get deploy ID
        run: echo "The DEPLOY_ID is ${{ steps.set-deploy-id.outputs.DEPLOY_ID }}"
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - uses: actions/setup-node@main
        with:
          node-version: "16"
      - name: Install dependencies and run unit tests
        run: |
          cd ui
          npm ci
          npm run test:coverage

      - name: Upload UI Code Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: ${{ github.workspace }}/ui/coverage

      - name: Login to Github Container Registry
        run: |
          echo "${{ env.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} --username ${{ env.REGISTRY_USERNAME }} --password-stdin

      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Area Service UI
        uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./ui/Dockerfile
          tags: ${{ steps.docker_meta.outputs.tags }}
          load: true
          build-args: |
            GITHUB_API_TOKEN=${{ env.GITHUB_TOKEN }}
            APP_VERSION=${{ steps.release.outputs.version }}
            APP_REVISION=${{ steps.set-deploy-id.outputs.APP_REVISION }}

      - name: Push
        run: docker push ${{ steps.docker_meta.outputs.tags }}
